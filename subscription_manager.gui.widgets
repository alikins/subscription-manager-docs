MODULE NAME
    subscription_manager.gui.widgets


CLASSES
    
    class GladeWidget(object)
     |  
     |  
     |  __init__(self, glade_file, initial_widget_names=None)
     |      Create a new widget backed by the give glade file (assumed to 
     |      be in data/). The initial_widget_names is a list of widgets to 
     |      pull in as instance variables.
     |  
     |  pull_widgets(self, names)
     |      This is a convenience method to pull the widgets from the 
     |      'names' list out of the given glade file, and make them 
     |      available as variables on self.
     |      
     |      For example:  a widget with the name age_input could be 
     |      accessed via self.age_input
     |  
     |  Inherited methods
     |      object.__delattr__(...)
     |      object.__format__(...)
     |      object.__getattribute__(...)
     |      object.__hash__(x)
     |      object.__new__(T, S, *...)
     |      object.__reduce__(...)
     |      object.__reduce_ex__(...)
     |      object.__repr__(x)
     |      object.__setattr__(...)
     |      object.__sizeof__()
     |      object.__str__(x)
     |      object.__subclasshook__(...)
    
    class SubscriptionManagerTab(GladeWidget)
     |  
     |  
     |  __init__(self, glade_file, initial_widget_names=[])
     |      Creates a new tab widget, given the specified glade file and a 
     |      list of widget names to extract to instance variables.
     |  
     |  get_store(self)
     |  
     |  add_text_column(self, name, store_key, expand=False, markup=False)
     |  
     |  add_date_column(self, name, store_key, expand=False)
     |  
     |  get_content(self)
     |  
     |  _selection_callback(self, treeselection)
     |  
     |  on_selection(self, selection)
     |  
     |  on_no_selection(self)
     |  
     |  _set_next_update(self)
     |  
     |  refresh(self)
     |  
     |  Inherited methods
     |      object.__delattr__(...)
     |      object.__format__(...)
     |      object.__getattribute__(...)
     |      object.__hash__(x)
     |      object.__new__(T, S, *...)
     |      object.__reduce__(...)
     |      object.__reduce_ex__(...)
     |      object.__repr__(x)
     |      object.__setattr__(...)
     |      object.__sizeof__()
     |      object.__str__(x)
     |      object.__subclasshook__(...)
     |      subscription_manager.gui.widgets.GladeWidget.pull_widgets(self, names)
    
    class SelectionWrapper(object)
     |  
     |  
     |  __init__(self, treeselection, store)
     |      x.__init__(...) initializes x; see x.__class__.__doc__ for 
     |      signature
     |  
     |  is_valid(self)
     |  
     |  __getitem__(self, key)
     |  
     |  Inherited methods
     |      object.__delattr__(...)
     |      object.__format__(...)
     |      object.__getattribute__(...)
     |      object.__hash__(x)
     |      object.__new__(T, S, *...)
     |      object.__reduce__(...)
     |      object.__reduce_ex__(...)
     |      object.__repr__(x)
     |      object.__setattr__(...)
     |      object.__sizeof__()
     |      object.__str__(x)
     |      object.__subclasshook__(...)
    
    class ProductsTable(object)
     |  
     |  
     |  __init__(self, table_widget, yes_id=gtk.STOCK_APPLY, 
     |           no_id=gtk.STOCK_REMOVE)
     |      Create a new products table, populating the gtk.TreeView.
     |      
     |      yes_id and no_id are GTK constants that specify the icon to use
     |      for representing if a product is installed.
     |  
     |  clear(self)
     |      Remove all products from the table.
     |  
     |  add_product(self, product_name, product_id)
     |      Add a product with the given name and id to the table.
     |  
     |  set_accessibility_name(self, accessibility_name)
     |  
     |  _render_icon(self, icon_id)
     |  
     |  _get_icon(self, product_id)
     |  
     |  Inherited methods
     |      object.__delattr__(...)
     |      object.__format__(...)
     |      object.__getattribute__(...)
     |      object.__hash__(x)
     |      object.__new__(T, S, *...)
     |      object.__reduce__(...)
     |      object.__reduce_ex__(...)
     |      object.__repr__(x)
     |      object.__setattr__(...)
     |      object.__sizeof__()
     |      object.__str__(x)
     |      object.__subclasshook__(...)
    
    class SubDetailsWidget(GladeWidget)
     |  
     |  
     |  __init__(self, show_contract=True)
     |      Create a new widget backed by the give glade file (assumed to 
     |      be in data/). The initial_widget_names is a list of widgets to 
     |      pull in as instance variables.
     |  
     |  show(self, name, contract=None, start=None, end=None, account=None, 
     |       management=None, support_level="", stacking_id=None, 
     |       support_type="", virt_only=None, products=[], highlight=None)
     |      Show subscription details.
     |      
     |      Start and end should be formatted strings, not actual date 
     |      objects. Products is a list of tuples in the format (name, id)
     |  
     |  _set(self, text_view, text)
     |      Set the buffer of the given TextView to contain the text
     |  
     |  clear(self)
     |      No subscription to display.
     |  
     |  get_widget(self)
     |      Returns the widget to be packed into a parent window.
     |  
     |  Inherited methods
     |      object.__delattr__(...)
     |      object.__format__(...)
     |      object.__getattribute__(...)
     |      object.__hash__(x)
     |      object.__new__(T, S, *...)
     |      object.__reduce__(...)
     |      object.__reduce_ex__(...)
     |      object.__repr__(x)
     |      object.__setattr__(...)
     |      object.__sizeof__()
     |      object.__str__(x)
     |      object.__subclasshook__(...)
     |      subscription_manager.gui.widgets.GladeWidget.pull_widgets(self, names)
    
    class CellRendererDate(gtk.CellRendererText)
     |  Custom cell renderer to display the date in the user's locale.
     |  
     |  
     |  __init__(self)
     |  
     |  do_set_property(self, prop, value)
     |      called to set the date property for rendering in a cell. we 
     |      convert to display in the user's locale, then pass on to the 
     |      cell renderer.
     |  
     |  Class variables
     |      
     |      __gproperties__ = {'date':(gobject.TYPE_PYOBJECT, 'date', 'd...
    
    class DatePicker(gtk.HBox)
     |  
     |  
     |  __init__(self, date)
     |      Initialize the DatePicker. date is a python datetime.date 
     |      object.
     |  
     |  date(self)
     |  
     |  date_entry_validate(self)
     |      validate the date and pop up a box if not valid
     |  
     |  _date_validate(self, date_str)
     |  
     |  _date_entry_box_grab_focus(self, dummy2=None, dummy3=None)
     |  
     |  _date_str_to_date(self, date_str)
     |  
     |  _date_update_cal(self, dummy=None)
     |  
     |  _date_update_text(self, dummy=None)
     |  
     |  _button_clicked(self, button)
     |  
     |  _destroy(self)
     |  
     |  _calendar_clicked(self, calendar)
     |  
     |  _today_clicked(self, button)
     |  
     |  Class variables
     |      
     |      __gsignals__ = {'date-picked-cal':(gobject.SIGNAL_RUN_LAST, ...
    
    class ToggleTextColumn(gtk.TreeViewColumn)
     |  A gtk.TreeViewColumn that toggles between two text values based on 
     |  a boolean value in the store.
     |  
     |  
     |  __init__(self, column_title, model_idx)
     |  
     |  _render_cell(self, column, cell_renderer, tree_model, iter)
     |  
     |  _get_true_text(self)
     |  
     |  _get_false_text(self)
     |  
     |  _get_none_text(self)
    
    class MultiEntitlementColumn(ToggleTextColumn)
     |  
     |  
     |  __init__(self, multi_entitle_model_idx)
     |      A table column that renders an * character if model specifies a
     |      multi-entitled attribute to be True
     |  
     |  _get_true_text(self)
     |  
     |  _get_false_text(self)
     |  
     |  Class variables
     |      
     |      MULTI_ENTITLEMENT_STRING = "*"
     |      
     |      NOT_MULTI_ENTITLEMENT_STRING = ""
     |  
     |  Inherited methods
     |      subscription_manager.gui.widgets.ToggleTextColumn._get_none_text(self)
     |      subscription_manager.gui.widgets.ToggleTextColumn._render_cell(self, column, cell_renderer, tree_model, iter)
    
    class MachineTypeColumn(ToggleTextColumn)
     |  
     |  
     |  __init__(self, virt_only_model_idx)
     |  
     |  _get_true_text(self)
     |  
     |  _get_false_text(self)
     |  
     |  _get_none_text(self)
     |  
     |  Class variables
     |      
     |      PHYSICAL_MACHINE = _("Physical")
     |      
     |      VIRTUAL_MACHINE = _("Virtual")
     |      
     |      BOTH_MACHINES = _("Both")
     |  
     |  Inherited methods
     |      subscription_manager.gui.widgets.ToggleTextColumn._render_cell(self, column, cell_renderer, tree_model, iter)
    
    class QuantitySelectionColumn(gtk.TreeViewColumn)
     |  
     |  
     |  __init__(self, column_title, tree_model, quantity_store_idx, 
     |           is_multi_entitled_store_idx, available_store_idx=None, 
     |           editable=True)
     |  
     |  _setup_editor(self, cellrenderer, editable, path)
     |  
     |  _text_inserted_in_spinner(self, widget, text, length, position)
     |  
     |  _filter_spinner_value(self, triggering_event, editable, new_value)
     |  
     |  get_column_legend_text(self)
     |  
     |  _on_edit(self, renderer, path, new_text, model)
     |      Handles when a quantity is changed in the cell. Stores new 
     |      value in model.
     |  
     |  _update_cell_based_on_data(self, column, cell_renderer, tree_model, 
     |                             iter)

FUNCTIONS
    
    expand_collapse_on_row_activated_callback(treeview, path, view_column)
        A gtk.TreeView callback allowing row expand/collapse on 
        double-click or key press (space, return, enter).

VARIABLES
    
    _ = gettext.gettext
    
    GLADE_DIR = os.path.join(os.path.dirname(__file__), "data")
    
    UPDATE_FILE = '/var/run/rhsm/update'
